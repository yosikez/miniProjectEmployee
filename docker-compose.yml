version: '3.8'

services:
  app:
    build: .
    container_name: app
    image: "gomini"
    restart: always
    ports:
      - "8000:8000"
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      RMQ_HOST: ${RMQ_HOST}
      RMQ_USERNAME: ${RMQ_USERNAME}
      RMQ_PASSWORD: ${RMQ_PASSWORD}
      RMQ_EXCHANGE_NAME: ${RMQ_EXCHANGE_NAME}
      RMQ_EXCHANGE_KIND: ${RMQ_EXCHANGE_KIND}
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
    networks:
      - backend
  
  db: 
    container_name: db
    image: postgres:15.2
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - backend

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - backend

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend
  
networks:
  backend:
    name: backend
    driver: bridge

volumes:
  postgres-data:
    name: postgres-data
  pgadmin-data:
    name: pgadmin-data
  rabbitmq-data:
    name: rabbitmq-data
